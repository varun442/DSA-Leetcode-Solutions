

class Solution{
    
    // arr: input array
    // n: size of array
    // Function to find the trapped water between the blocks.
    static long trappingWater(int arr[], int n) { 
        // Your code here
        int leftarr[] = new int[n];
        long  trappedWater = 0;
        leftarr[0]=arr[0];
        for(int i=1;i<n;i++){
            leftarr[i]=Math.max(arr[i],leftarr[i-1]);
        }
        
        //right auxilary array
        int rightarr[] = new int[n];
        rightarr[n-1]=arr[n-1];
        for(int i=n-2;i>=0;i--){
            rightarr[i]=Math.max(arr[i],rightarr[i+1]);
        }
        
        for(int i=1;i<n;i++){
            int wl = Math.min(leftarr[i],rightarr[i]);
            
            trappedWater+=(wl-arr[i]);
        }
        return trappedWater;
        
    } 
}
